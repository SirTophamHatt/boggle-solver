"use strict";
exports.__esModule = true;
var chai_1 = require("chai");
var test_helper_1 = require("./test-helper");
var alphacode_1 = require("../alphacode");
suite("Alpha Codes", function () {
    suite("Encode and decode", function () {
        var tests = [
            [0, '0'], [1, '1'], [2, '2'], [9, '9'],
            [10, 'A'], [11, 'B'], [12, 'C'], [35, 'Z'],
            [36, '00'], [37, '01'],
            [36 + 10 * 36, 'A0'], [46 + 10 * 36, 'AA'],
            [36 + 36 * 36, '000']
        ];
        test_helper_1.dataDrivenTest(tests, function (num, code) {
            chai_1.assert.equal(alphacode_1.toAlphaCode(num), code);
            chai_1.assert.equal(alphacode_1.fromAlphaCode(code), num);
        });
    });
    test("Random integers", function () {
        for (var i = 0; i < 1000; i++) {
            var n = randomInt(100000);
            var c = alphacode_1.toAlphaCode(n);
            chai_1.assert.equal(alphacode_1.fromAlphaCode(c), n);
        }
    });
});
function randomInt(max) {
    return Math.floor(Math.random() * max);
}
//# sourceMappingURL=alphacode-test.js.map