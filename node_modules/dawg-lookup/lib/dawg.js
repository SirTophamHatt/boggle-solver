#!/usr/bin/env node
"use strict";
exports.__esModule = true;
var trie_1 = require("./trie");
var file_util_1 = require("./file-util");
// Command-line argument processing.
function main(args) {
    if (args.length !== 1) {
        throw new Error("Usage: dawg-lookup dictionary.txt > dictionary.dawg");
    }
    compressDictionaryFile(args[0])
        .then(function (packed) {
        process.stdout.write(packed + '\n');
    });
}
// Pack a single file and write to standard output.
function compressDictionaryFile(path) {
    return file_util_1.readFile(path)
        .then(function (data) {
        var trie = new trie_1.Trie(data);
        var packed = trie.pack();
        console.error('Compressed ' + trie.wordCount + ' words.');
        console.error('Input size: ' + data.length + ' bytes.');
        console.error('Compressed size: ' + packed.length + ' bytes.');
        return packed;
    });
}
// Call main() if run from command line (as opposed to being required).
if (require.main === module) {
    try {
        main(process.argv.slice(2));
    }
    catch (e) {
        console.error(e.message);
        process.exit();
    }
}
//# sourceMappingURL=dawg.js.map